##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
# Default server configuration
#

upstream php8 {
    server unix:/run/php/php8.4-fpm.sock;
}

upstream php7 {
    server unix:/run/php/php7.0-fpm.sock;
}

upstream heimdall {
   server        127.0.0.1:7888;
}

upstream mariadb {
   server        127.0.0.1:8095;
}

upstream portainer {
   server       127.0.0.1:9010;
}

upstream code-server {
   server       127.0.0.1:8085;
}

upstream drawio {
   server       127.0.0.1:8087;
}

upstream teamcity {
    server       127.0.0.1:8112 fail_timeout=0;
    keepalive    32;
}

upstream jira {
    server       127.0.0.1:8181 fail_timeout=0;
    keepalive    32;
}

upstream artifactory {
    server       127.0.0.1:8081 fail_timeout=0;
    keepalive    32;
}

upstream notebook {
    server       127.0.0.1:8888 fail_timeout=0;
    keepalive    32;
}

upstream gitlab {
    server       127.0.0.1:2443 fail_timeout=0;
    keepalive    32;
}

upstream cockpit-ws {
    server       127.0.0.1:9090 fail_timeout=0;
    keepalive    32;
}

server {
    root /var/www/html;
    autoindex off;
    index index.php;

    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    http2 on;

    server_name jaraberrocal.readmyblog.org;

    access_log /var/log/nginx/ssl_access.log;
    error_log  /var/log/nginx/ssl_error.log;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html index.php;

    # Some players don't reopen a socket and playback stops totally instead of resuming after an extended pause (e.g. Chrome)
    send_timeout 100m;

    # Faster resolving, improves stapling time. Timeout and nameservers may need to be adjusted for your location Google's have been used here.
    resolver 8.8.4.4 8.8.8.8 valid=300s;
    resolver_timeout 10s;

    # SSL settings
    # listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/jaraberrocal.readmyblog.org/fullchain.pem; # managed by Certbot
    # ssl_certificate       /var/www/certs/ssl-bundle.crt;
    ssl_certificate_key /etc/letsencrypt/live/jaraberrocal.readmyblog.org/privkey.pem; # managed by Certbot
    ssl_session_timeout  5m;
    ssl_protocols TLSv1.2 TLSv1.3;

    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Robots-Tag "noindex, nofollow" always;
    add_header X-Permitted-Cross-Domain-Policies none always;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block" always;

    # Why this is important: https://blog.cloudflare.com/ocsp-stapling-how-cloudflare-just-made-ssl-30/
    ssl_stapling on;
    ssl_stapling_verify on;

    # SSLLabs.com suggestion
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:ECDH+AES256:DH+AES256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:EDH+aRSA:!RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
    ssl_prefer_server_ciphers on;

    # Reuse ssl sessions, avoids unnecessary handshakes
    # Turning this on will increase performance, but at the cost of security. Read below before making a choice.
    # https://github.com/mozilla/server-side-tls/issues/135
    # https://wiki.mozilla.org/Security/Server_Side_TLS#TLS_tickets_.28RFC_5077.29
    ssl_session_tickets on;

    # Redirect server error pages to the static page /50x.html
    error_page 500 502 503 504  /50x.html;

    # If they come here using HTTP, bounce them to the correct scheme
    error_page 497 https://$server_name:$server_port$request_uri;

    # Location of 50x.html
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # add global x-content-type-options header
    add_header X-Content-Type-Options nosniff;

    # Sessions
    proxy_cache_key "$host$request_uri$cookie_sessioncookie";

    # STS header
    add_header Strict-Transport-Security max-age=31536000;

    # Challenges
    location ^~ /.well-known/pki-validation/ {
        # No HTTP authentication
        allow all;

        # Set correct content type. According to this:
        # https://community.letsencrypt.org/t/using-the-webroot-domain-verification-method/1445/29
        # Current specification requires "text/plain" or no content header at all.
        # It seems that "text/plain" is a safe option.
        default_type "text/plain";
    }

    # Hide /pki-challenge subdirectory and return 404 on all requests.
    # It is somewhat more secure than letting Nginx return 403.
    # Ending slash is important!
    location = /.well-known/pki-validation/ {
        return 404;
    }

    # Challenges
    location ^~ /.well-known/acme-challenge/ {
        # No HTTP authentication
        allow all;

        # Set correct content type. According to this:
        # https://community.letsencrypt.org/t/using-the-webroot-domain-verification-method/1445/29
        # Current specification requires "text/plain" or no content header at all.
        # It seems that "text/plain" is a safe option.
        default_type "text/plain";
   }

    # Hide /acme-challenge subdirectory and return 404 on all requests.
    # It is somewhat more secure than letting Nginx return 403.
    # Ending slash is important!
    location = /.well-known/acme-challenge/ {
        return 404;
    }

    # Pass all .php files onto a php-fpm/php-fcgi server.
    location ~ \.php$ {
        # Comment the 'try_files' line out if you set up php-fpm/php-fcgi on another machine.  And then cross your fingers that you won't get hacked.
        # try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass php8;
    }

    location / {
        # try_files $uri $uri/ /index.php?$args;
        # time out settings
        # fastcgi_read_timeout 120;

        proxy_pass http://heimdall;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Cache images
    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt { log_not_found off; access_log off; allow all; }

    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    location ~ /\.ht {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Joomla
    location /joomla {
        try_files $uri $uri/ /index.php?$args;
        # time out settings
        fastcgi_read_timeout 120;

        if ($request_uri ~ "^system.*"){
            rewrite ^/joomla/(.*)$ /joomla/index.php?/$1 last;
        }
        if (!-e $request_filename){
            rewrite ^/joomla/(.*)$ /joomla/index.php?/$1 last;
        }
    }

    # Gitlab
    location /gitlab/ {
        proxy_pass https://127.0.0.1:2443/gitlab/;

        # Use remote real IP, add $server_port to remove port number
        proxy_set_header   Host             $host:$server_port;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;

        # Use websockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /sonarqube {
        proxy_pass http://127.0.0.1:9191/sonarqube;
        proxy_cookie_path        ~*^/.* "/; secure";

        # Use remote real IP
        proxy_set_header  Host $host:$server_port;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;

        # Use websockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        client_max_body_size 10M;
        proxy_buffers 4 256k;
        proxy_buffer_size 128k;
        proxy_busy_buffers_size 256k;
    }

    # Note that regex takes precedence, so use of "^~" ensures earlier evaluation
    location /jenkins {
        # Proxy redirect
        proxy_pass http://127.0.0.1:9082/jenkins;
        proxy_redirect http:// https://;
        sendfile off;

        # Use remote real IP
        proxy_set_header   Host                 $host:$server_port;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;

        # Use websockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Set maximum upload size
        client_max_body_size       10m;
        client_body_buffer_size    128k;

        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         3600;
        proxy_max_temp_file_size 0;

        proxy_buffer_size          4k;
        proxy_buffers              4 32k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;
    }

    # Zabbix
    location /zabbix {
        alias /usr/share/zabbix/;
        index index.php;

        location ~ ^/zabbix/(.+\.php)$ {
            alias /usr/share/zabbix/$1;
            fastcgi_pass unix:/run/php/php8.3-fpm.sock;  # Update to match your PHP version/socket
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            fastcgi_param  PHP_VALUE  "display_errors=Off \n error_reporting=E_ALL & ~E_DEPRECATED & ~E_NOTICE & ~E_WARNING";
            include fastcgi_params;
        }

        location ~ ^/zabbix/(.+\.(jpg|jpeg|gif|png|css|js|ico|svg|ttf|woff|woff2|eot))$ {
            alias /usr/share/zabbix/$1;
            access_log off;
            log_not_found off;
            expires 30d;
        }
    }

    # Webdav
    location ~ \.(_.*|DS_Store|Spotlight-V100|TemporaryItems|Trashes|hidden|localized)$ {
        access_log  off;
        error_log   off;

        if ($request_method = PUT) {
            return 403;
        }
        return 404;
    }

    location ~ \.metadata_never_index$ {
        return 200 "Don't index this drive, Finder!";
    }

    location /webdav {
        alias /var/www/webdav;
        autoindex on;
        autoindex_exact_size off;
        dav_methods PUT MKCOL COPY MOVE;
        create_full_put_path on;

        limit_except GET PROPFIND OPTIONS {
            allow 192.168.0.0/16;
            deny  all;
        }
    }

    location /TpT {
        alias /var/www/TpT;
        autoindex on;
        autoindex_exact_size off;
        dav_methods PUT MKCOL COPY MOVE;
        create_full_put_path on;

        limit_except GET PROPFIND OPTIONS {
            allow 192.168.0.0/16;
            deny  all;
        }
    }

    location /webdavext {
        alias /var/www/webdavext;
        autoindex on;
        autoindex_exact_size off;
        dav_methods PUT DELETE MKCOL COPY MOVE;
        dav_ext_methods PROPFIND OPTIONS;
        dav_access      user:rw group:rw all:r;

        create_full_put_path on;

        auth_basic "Restricted Content";
        auth_basic_user_file /var/www/.htpasswd;

        # Add explicit try_files directive
        # try_files $uri $uri/ =404;
    }

    # Calibreweb
    location /calibre-web {
        proxy_pass              http://localhost:8084;
        proxy_set_header        Host            $http_host;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Scheme        $scheme;
        proxy_set_header        X-Script-Name   /calibre-web;
    }

    # Cockpit
    location /mgmt/ {
        proxy_pass https://localhost:9090/mgmt/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Required for web sockets to function
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Pass ETag header from Cockpit to clients.
        # See: https://github.com/cockpit-project/cockpit/issues/5239
        gzip off;

        # auth_basic "Restricted Content";
        # auth_basic_user_file /var/www/.htpasswd;
    }

    # Artifactory
    location /artifactory/ {
        proxy_buffers            4 256k;
        proxy_busy_buffers_size  256k;
        proxy_read_timeout       900;

        # Paths
        proxy_cookie_path        ~*^/.* /;
        proxy_pass               http://localhost:8081/artifactory/;

        # Use remote real IP
        proxy_set_header  Host $host:$server_port;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;

        # No buffering to temp files, it fails for large downloads
        proxy_max_temp_file_size 0;

        # Disable check to allow unlimited body sizes
        client_max_body_size 0;
    }

    location /ui/ {
        proxy_read_timeout 900;
        proxy_cookie_path  ~*^/.* /;
        proxy_pass         http://localhost:8082/ui/;
        proxy_set_header   Host $host:$server_port;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # Jira
    location /jira/ {
        proxy_pass http://localhost:8181;

        # Use remote real IP
        proxy_set_header  Host $host:$server_port;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto $scheme;

        client_max_body_size 10M;
        proxy_buffers 4 256k;
        proxy_buffer_size 128k;
        proxy_busy_buffers_size 256k;
    }

    # Teamcity
    location /teamcity/ {
        proxy_pass http://localhost:8112;

        # Use remote real IP
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        client_max_body_size 100M;
        proxy_buffers 4 256k;
        proxy_buffer_size 128k;
        proxy_busy_buffers_size 256k;
    }

    # Kubernetes dashboard
    location /kubernetes/ {
        proxy_pass http://localhost:8001;
        rewrite  ^/kubernetes/(.*)  /$1 break;

        proxy_ssl_certificate /etc/kubernetes/pki/front-proxy-client.crt;
        proxy_ssl_certificate_key /etc/kubernetes/pki/front-proxy-client.key;
        proxy_ssl_trusted_certificate /etc/kubernetes/pki/ca.crt;
        set $token "eyJhbGciOiJSUzI1NiIsImtpZCI6IkxlcVRKb2lvOGtiLU5yekJGck5TaUxoM0RnR1FZVmRxQjBnaTN1c3lDVEUifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhYmVsYXJkb2phcmEtdG9rZW4tcGZqZnMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiYWJlbGFyZG9qYXJhIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNzg3ZTRiYTAtMGNmMC00YzE1LWI5NDctNGYzYjkyNWYxZmUyIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmVybmV0ZXMtZGFzaGJvYXJkOmFiZWxhcmRvamFyYSJ9.LHdsFOv6NQoEDfF_z45OtWbaa59V7g2iEx04DoWIy5Z5ItcOFLFTUVBZyT1CdYk7kR5IOd2myW3u1_RtxOCRbw68dd9vTvl2Wt6gDertMXj5uD3L8BAY7wyLvS_WJ4C46OeXlOF9iMrMONrI67xj2WZBPN8utYr0-SqbVdhpSaVgdJkBXhFB4I4VZOn72fJAACyzCgnJpfecBjWcDrqrX4kjmeOKh1mSMIcpvyawDgdn4eRHHkKJN0-3yjHGhi89ZGUrTaMNFKViqoErcWHBVkmPzHpHFNV3d7wPdxHZ2s_14oiXRn82ySgrC7IeRQQSNljSyB68BfzhwOHXfZUdDw";
        proxy_set_header Authorization "Bearer $token";

        auth_basic "Restricted Content";
        auth_basic_user_file /var/www/.htpasswd;
        auth_request_set $token $upstream_http_x_auth_request_access_token;
    }

    # Grafana
    location /grafana/ {
        proxy_pass http://localhost:3000/;

        # The final / in previous line handles next line
        # rewrite ^/grafana/(.*)  /$1 break;

        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_buffers 4 256k;
        proxy_buffer_size 128k;
        proxy_busy_buffers_size 256k;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Security headers
        proxy_set_header X-Content-Type-Options nosniff;
        proxy_hide_header X-Frame-Options;
    }

    # Kibana
    location ~ /kibana {
        proxy_pass http://localhost:5601;

        # Real IP and port
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        auth_basic "Restricted Content";
        auth_basic_user_file /var/www/.htpasswd;
    }

    # Prometheus
    location /prometheus/ {
        proxy_pass http://localhost:9091;

        # Real IP and port
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        auth_basic "Restricted Content";
        auth_basic_user_file /var/www/.htpasswd;
    }

    # Webmin
    location /webmin/ {
        proxy_pass http://localhost:10000/;

        # Remote the port from proxy redirect
        # proxy_set_header   Host              $host:$server_port;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        proxy_buffering off;

        proxy_max_temp_file_size   0;
        proxy_connect_timeout      90;
        proxy_send_timeout         90;
        proxy_read_timeout         90;
        proxy_buffer_size          128k;
        proxy_buffers              32 32k;
        proxy_busy_buffers_size    256k;
        proxy_temp_file_write_size 256k;
    }

    # Filebrowser
    location /filebrowser/ {
        # rewrite ^/filebrowser(/.*)$ $1 break;
        # proxy_pass http://localhost:8484/;

        proxy_pass http://localhost:8484;

        # Remote the port from proxy redirect
        proxy_set_header   Host              $host:$server_port;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        # auth_basic "Restricted Content";
        # auth_basic_user_file /var/www/.htpasswd;
    }

    # Elasticsearch
    location ~ ^/es(.*) {
        rewrite /es/(.*) /$1  break;

        # Deny Nodes Shutdown API
        if ($request_filename ~ "_shutdown") {
            return 403;
            break;
        }

        if ($request_method !~ ^(GET|POST|HEAD)$ ) {
            return 405;
            break;
        }

        proxy_pass http://localhost:9200;
        proxy_redirect off;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Jupyter
    location /notebook/ {
        proxy_pass http://localhost:8888/notebook/;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Important: turn off buffering and allow long-lived sessions
        proxy_read_timeout 86400;
        proxy_buffering off;
    }

    # Code server
    location /code-server/ {
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";
       proxy_pass http://code-server/;
    }

    # Drawio
    location /drawio/ {
       proxy_http_version 1.1;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";
       proxy_pass http://drawio/;
    }

    # Portainer
    location /portainer/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://portainer/;
    }

    location /portainer/api/websocket/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://portainer/api/websocket/;
    }

    # Guacamole
    location ^~ /guacamole/ {
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://localhost:8190/guacamole/;
        proxy_buffering off;
    }

    # Nextcloud
    location /nextcloud/ {
        proxy_pass http://localhost:8890/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 90;
        client_max_body_size 2G;
    }

    location /nextcloud/nextcloud/ {
        return 301 $scheme://$host/nextcloud/;
    }
}

# Registry subdomain
server {
    listen 443 ssl;
    server_name registry.jaraberrocal.readmyblog.org;

    location /v2/ {
        proxy_pass http://localhost:5000;
        auth_basic "Private Docker Registry";
        auth_basic_user_file /var/www/.htpasswd;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    ssl_certificate /etc/letsencrypt/live/registry.jaraberrocal.readmyblog.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/registry.jaraberrocal.readmyblog.org/privkey.pem; # managed by Certbot
}

server {
    if ($host = www.jaraberrocal.readmyblog.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = jaraberrocal.readmyblog.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80 default_server;
    listen [::]:80 default_server;

    server_name jaraberrocal.readmyblog.org www.jaraberrocal.readmyblog.org;
    return 404; # managed by Certbot
}
