# -*-conf-*-
#

# the following two lines give a two-line status, with the current window highlighted
hardstatus alwayslastline '%{= wk} %-w%{+b wk}%50> %n* %t %{= wk}%+w%< %{= wk}%-=%D %m/%d/%y | %C:%s %A | %1`%{-} %2`%{-}'
hardstatus string '%{= kG}[%{G}%H%? %1`%?%{g}][%= %{= kw}%-w%{+b yk} %n*%t%?(%u)%? %{-}%+w %=%{g}][%{B}%m/%d %{W}%C%A%{g}]'

# format activity message
activity "%c activity -> %n%f %t"

# on split screen, switch window focus by clicking
mousetrack on

# if we accidentally hangup, don't be all attached when we come back.
autodetach on

# huge scrollback buffer
defscrollback 5000

# to clear the screen after closing some programs
altscreen on

# Enable colors and some useful terminfo
term screen-256color
terminfo rxvt-unicode 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'

# Tell screen how to set colors. AB = background, AF=foreground
termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'

# Enables use of shift-PgUp and shift-PgDn
termcapinfo xterm|xterms|xs|rxvt ti@:te@

# have screen update terminal emulators titlebar
defhstatus "screen ^E (^Et) | $USER@^EH"

# terminfo and termcap for nice 256 color terminal
# allow bold colors - necessary for some reason
attrcolor b ".I"

# nicer shell title
shelltitle "$ |bash"

# erase background with current bg color
defbce "on"

# Do not show startup message
startup_message off

# Enable UTF
defutf8 on
utf8 on

# Enable scrolling support
defscrollback 15000

# default windows
screen -t Shell1  1 bash

# window numbering starts at 1 not 0
bind c screen 1

# so it won't seem like there is a delay when entering copy mode
msgminwait 0

# Instead of Control-a, make the escape/command character be Ctrl-b
escape ^Bb

# Reload .screenrc
bind r eval "source $HOME/.screenrc" "echo '.screenrc reloaded!'"

# C-g  quit command mode
bind ^g fit

# C-g and other keys quit copy mode.
markkeys \033=\015=^G

# Ctrl+Alt+Left from gnome-terminal
bindkey ^[[1;7C next

# Ctrl+Alt+Left from putty
bindkey ^[^[[D next

# Ctrl+Alt+Right from gnome-terminal
bindkey ^[[1;7D prev

# Ctrl+Alt+Right from putty
bindkey ^[^[[C prev

# Use Alt-PageUp and Alt-PageDown to navigate tabs
bindkey -t ^[[5;3~ prev
bindkey -t ^[[6;3~ next

# Navigating regions with Ctrl-arrows
bindkey "^[[1;5D" focus left
bindkey "^[[1;5C" focus right
bindkey "^[[1;5A" focus up
bindkey "^[[1;5B" focus down

# Split window
bind _ eval 'split' focus screen
bind | eval 'split -v' focus screen

# trigger for window sub-commands
bind w eval "command -c rsz" # enter resize mode

# Use hjkl keys to resize regions
bind -c rsz h eval "resize -h -5" "command -c rsz"
bind -c rsz j eval "resize -v -5" "command -c rsz"
bind -c rsz k eval "resize -v +5" "command -c rsz"
bind -c rsz l eval "resize -h +5" "command -c rsz"

# Quickly switch between regions using tab and arrows
bind -c rsz \t    eval "focus"       "command -c rsz" # Tab
bind -c rsz -k kl eval "focus left"  "command -c rsz" # Left
bind -c rsz -k kr eval "focus right" "command -c rsz" # Right
bind -c rsz -k ku eval "focus up"    "command -c rsz" # Up
bind -c rsz -k kd eval "focus down"  "command -c rsz" # Down

# trigger for layout sub-commands
bind y eval 'command -c layout' 'layout show'

# create/remove layout
bind -c layout c eval 'layout new'    'layout show'
bind -c layout X eval 'layout remove' 'layout show'

# switch to other layout
bind -c layout n eval 'layout next'     'layout show'
bind -c layout p eval 'layout prev'     'layout show'
bind -c layout 0 eval 'layout select 0' 'layout show'
bind -c layout 1 eval 'layout select 1' 'layout show'
bind -c layout 2 eval 'layout select 2' 'layout show'
bind -c layout 3 eval 'layout select 3' 'layout show'

# The following settings are interpreted by EMACS, do not remove them.
# Local Variables:
# mode: shell-script
# fill-column: 80
# coding: utf-8
# End:
