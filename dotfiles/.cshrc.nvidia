# UTF-8 or go home.
setenv LC_TYPE en_US.utf-8

# A righteous umask
umask 22

# Defaults
setenv  EDITOR      "vim"
setenv  VISUAL      "${EDITOR}"
setenv  PAGER       less
setenv  BLOCKSIZE   K
setenv  TERM        xterm-256color
setenv  EMACS_SERVER_FILE $HOME/.emacs.cache/server/server

# Locale
setenv LANG en_US.UTF-8
setenv NCURSES_NO_UTF8_ACS 1

# Binary path
setenv gcc_root /home/denver/release/sw/tools/gcc-x86/5.4.0/cl45807481/CentOS-6.8
setenv path_utils '/home/denver/release/sw/tools/cmake/current/bin /home/denver/release/sw/tools/python-3.7.2/bin /home/utils/flex-2.6.4/bin /home/utils/bison-2.7.1/bin /home/denver/release/sw/tools/gcc-x86/5.4.0/current/CentOS-6.8/bin /home/denver/release/sw/tools/texinfo-4.9/bin /home/denver/release/sw/tools/doxygen/bin /home/utils/make-4.2.1/bin /home/utils/gdb-8.2.1/bin /home/denver/release/sw/tools/binutils-2.28/bin /home/nv/bin /home/utils/bin /usr/X11R6/bin /usr/kerberos/bin /usr/local/lsf/bin'

if ( ! $?newpath ) set newpath
foreach d (/home/utils/perl-5.26/5.26.2-028/bin $HOME/anaconda3/bin $HOME/.local/bin $HOME/local/bin $HOME/local/usr/bin $HOME/bin $gcc_root/bin $HOME/builds/llvm/build/bin $HOME/local/cmake-3.15.5-Linux-x86_64/bin $path_utils $PATH /sbin /bin /usr/sbin /usr/bin /usr/games /usr/local/sbin /usr/local/bin)
    if ( -d $d ) then
        set -f newpath = ( $newpath $d )
    endif
end
set path = ( $newpath )
unset d
unset newpath

# Library path
if ( ! $?newpath ) set newpath
foreach d ($HOME/local/lib64 $HOME/local/lib $HOME/local/usr/lib $HOME/.local/lib64 $HOME/.local/lib $gcc_root/lib64 $gcc_root/lib /lib64 /lib /usr/lib64 /usr/lib /usr/local/lib64 /usr/local/lib)
    if ( -d $d ) then
        set -f newpath = "${newpath}:${d}"
    endif
end
set ld_library_path = ( $newpath )
setenv LD_LIBRARY_PATH $ld_library_path
unset d
unset newpath

# Aliases
alias pbcopy "xclip -selection clipboard"
alias pbpaste "xclip -selection clipboard -o"
unalias gcc

# Issue with RedhatOS
setenv  GIT_ASKPASS

# P4 defaults
setenv GENIE_BRANCH_DEFAULT nvcpu

# P4 client (this is host specific)
setenv P4CLIENT abelardojara-nvcpu
setenv P4CLIENTHOME /home/scratch.abelardoj_denver-info/jfubar-nvcpu
setenv P4EDITOR vim

# OpenBLAS issues
setenv OMP_NUM_THREADS 1
setenv USE_SIMPLE_THREADED_LEVEL3 1

# GTAGS
setenv GTAGSLABEL exuberant-ctags
setenv GTAGSLIBPATH $HOME/.gtags
setenv GTAGSTHROUGH true
setenv GTAGSFORCECPP 1

# Pkgconfig
setenv PKG_CONFIG_PATH "${HOME}/local/lib64/pkgconfig:${HOME}/local/lib/pkgconfig:/usr/lib64/pkgconfig"

# NNN settings
setenv NNN_USE_EDITOR 1
setenv NNN_TRASH 1

# Use locate on $HOME directory (locate from GNU findutils)
setenv LOCATE_PATH "$HOME/.home.mlocate.db"
alias lupdatedb "updatedb --localpaths='/home/abelardoj /home/abelardoj/workspace /home/abelardoj/local /home/abelardoj/.local /home/abelardoj/cmake_builds /home/scratch.abelardoj_denver-info_1' --output=/home/abelardoj/.home.mlocate.db --netpaths='/home/abelardoj/workspace /home/abelardoj/workspace/nvcpu/dev /home/abelardoj/cmake_builds /home/scratch.abelardoj_denver-info_1 /home/abelardoj/local /home/abelardoj/.local' --prunepaths='/home/abelardoj/.snapshot /home/abelardoj/builds'"

# Missing compiler flags
# https://github.com/zdevito/ATen/issues/183
setenv CFLAGS "-D__STDC_FORMAT_MACROS"
setenv CFLAGS "${CFLAGS} -fPIC"
setenv CXXFLAGS "${CFLAGS}"
# https://github.com/rust-lang/rust/issues/37786
setenv ASFLAGS "-mrelax-relocations=no"

# Missing linker flags
# https://github.com/tmux/tmux/issues/747
setenv LD_FLAGS "-lrt -Wl,--copy-dt-needed-entries"
# Prefer local libraries
setenv LD_FLAGS "${LD_FLAGS} -L${HOME}/local/lib -L${HOME}/local/lib64 -Wl,-rpath,${HOME}/local/lib  -Wl,-rpath,${HOME}/local/lib64"

# trun on Home End key
bindkey ^[[1~ beginning-of-line
bindkey ^[[4~ end-of-line

# DEL:
bindkey ^[[3~ delete-char

# HOME : go to the beginning of the line.
# already bound to beginnning-of-line, but the keycode thing was different.
bindkey ^[[H beginning-of-line

# END : go to the end of the line.
# same as above.
bindkey ^[[F end-of-line

# PAGE UP : search in history backwards for line beginning as current.
bindkey ^[[I history-search-backward
bindkey ^[[5~ history-search-backward   # for x

# PAGE DOWN : search in history forwards for line beginning as current.
bindkey ^[[G history-search-forward
bindkey ^[[6~ history-search-forward    # for x

# Search history using keys
bindkey -k up history-search-backward
bindkey -k down history-search-forward

if ($?prompt) then
    set promptchars = "%#"
    set filec
    set history = 8000
    set savehist = (8000 merge)
    set histfile = "$HOME/.csh_history"
    set histdup = erase              # save only unique history events
    set notify                       # notification when jobs change state
    #set recexact                    # completion always completes on a first exact match
    set autocorrect                  # spell-word editor command is invoked automatically
    set autoexpand                   # run expand-history before each completion attempt
    set implicitcd                   # change directory without cd
    set correct = cmd                # commands are automatically spelling-corrected
    set symlinks = chase             # symbolic link is expanded to the real name of the directory
    set complete = enhance           # completion ignores case and considers hyphens and underscores
    set autolist = ambiguous         # choices are listed only when completion fails
    set matchbeep = ambiguous        # beeps only when there is no match
    set color = ls-F                 # enables colors for the builtin autolist (TAB)set histfile = "$HOME/.csh_history"

    set time=(8 "\
                Time spent in user mode   (CPU seconds) : %Us\
                Time spent in kernel mode (CPU seconds) : %Ss\
                Total time                              : %Es\
                CPU utilization (percentage)            : %P\
                Times the process was swapped           : %W\
                Times of major page faults              : %F\
                Times of minor page faults              : %R")
    # set watch=(0 any any)
    # set who="%n has %a %l from %M."
endif

if ( -d ~/Mail/ ) then
    set mail = ~/Mail/
    setenv MAIL $HOME/Mail
endif

complete make  'n@*@`make -pn | sed -n -E "/^[#_.\/[:blank:]]+/d; /=/d; s/[[:blank:]]*:.*//gp;"`@'

complete pkill 'c/-/(1 2 3 6 9 14 15 HUP INT QUIT ABRT KILL ALRM TERM)/'\
               'n@*@`ps -a -x -c -o command="" | sort | uniq`@'

complete git 'p@1@`/bin/ls -1 /usr/libexec/git-core/ | grep "git-" | sed "s/git-//"`@' 'n/checkout/`git branch | tr -d "*"`/'

complete *p4     'c/-/(c d p u x)/' \
         'p/1/(add branch branches change changes \
         client clients delete depot depots \
         describe diff diff2 edit files filelog \
         fix fixes get have help info integ \
         integed job jobs label labels labelsync \
         lock open opened print protect refresh \
         reopen reresolve resolve resolved revert \
         review reviews submit unlock user users \
         where)/' \
'n/*/f:*/'

# Do not enable history, becomes super slow
set history = 2000
set savehist = (2000 merge)
set histfile = ~/.csh_history

alias precmd  "history -S; history -M; source ~/bin/gitprompt.csh"
alias postcmd 'history -S' # update and save history after each command

# gpg-agent
# Set GPG_TTY for curses pinentry
if ( -o /dev/$tty && -c /dev/$tty ) setenv GPG_TTY /dev/$tty

if ( -f ~/.gpg-agent-info ) then
    set TPID = `pgrep -nU $USER gpg-agent`
    if ($TPID == "") then
        gpg-agent -q --daemon -c >! ~/.gpg-agent-info
        echo "setenv GPG_AGENT_PID `pgrep -U $USER gpg-agent`" >> ~/.gpg-agent-info
    else
        source ~/.gpg-agent-info
        if ($?GPG_AGENT_PID) then
            if ($GPG_AGENT_PID != $TPID) then
                gpg-agent -q --daemon -c >! ~/.gpg-agent-info
                echo "setenv GPG_AGENT_PID `pgrep -U $USER gpg-agent`" >> ~/.gpg-agent-info
            endif
        else
            gpg-agent -q --daemon -c >! ~/.gpg-agent-info
            echo "setenv GPG_AGENT_PID `pgrep -U $USER gpg-agent`" >> ~/.gpg-agent-info
        endif
    endif
    source ~/.gpg-agent-info
    unset TPID
endif

# The following settings are interpreted by EMACS, do not remove them.
# Local Variables:
# mode: csh
# fill-column: 80
# coding: utf-8
# End:
